/********************
 * Production
 ********************/

produce(noProduction, [], [])

produce(produceCargo,
    [
        IORE: LOAD_TEMP(0);
    ],
    [
        STEL: LOAD_TEMP(0);
    ],
    0
)

/* evalProductionCycle(cargo_waiting)
 * A production cycle is 256 ticks long */
switch(FEAT_INDUSTRIES, SELF, evalProductionCycle, cargo_waiting,
    STORE_TEMP(min(GET_PERM(PRODUCTION_RATE), cargo_waiting), 0)
) {
    return produceCargo;
}


/********************
 * Industry
 ********************/

item(FEAT_INDUSTRIES, steel_mill) {
    property {
        substitute: INDUSTRYTYPE_STEEL_MILL;
        override:   INDUSTRYTYPE_STEEL_MILL;
        cargo_types: [
            accept_cargo("IORE"),
            produce_cargo("STEL", 0),
        ];
    }
    graphics {
        extra_text_industry: genExtraText;
        build_prod_change:   initPermanentStorage;

        produce_cargo_arrival: noProduction;
        random_prod_change:    CB_RESULT_IND_PROD_NO_CHANGE;

        produce_256_ticks: evalProductionCycle(incoming_cargo_waiting("IORE"));
        stop_accept_cargo: isStockpileFull(incoming_cargo_waiting("IORE"));

        monthly_prod_change: changeProduction(
                                incoming_cargo_waiting("IORE"),
                                last_month_production("STEL"),
                                transported_last_month_pct("STEL")
                             );
    }
}


#include "power.pnml"

/********************
 * Industry Sector
 ********************/

#define IND_PRIMARY   0x01
#define IND_SECONDARY 0x03
#define IND_TERTIARY  0x02

#define PRODUCES_BIT  0x01
#define CONSUMES_BIT  0x02

#define IND_PRODUCES  (GET_PERM(SECTOR) & PRODUCES_BIT)
#define IND_CONSUMES  (GET_PERM(SECTOR) & CONSUMES_BIT)


/********************
 * Produce
 *
 * This block contains common definitions, individual produce blocks are
 * generated.
 ********************/

#define PRODUCTION_BASE 16
#define PRODUCTION_MIN  5
#define PRODUCTION_MAX  255

// Industries have 8 or 9 production ticks a month giving, (8.5 * 3) ~= 26
#define THREE_MONTH_PROD_TICKS 26

produce(noProduction, [], [])


/********************
 * Initialisation
 ********************/

switch(FEAT_INDUSTRIES, SELF, initPermanentStorage,
    industry_sector,
    industry_type,
[
    SET_PERM(SECTOR, industry_sector),
    SET_PERM(INDUSTRY_TYPE, industry_type),
    SET_PERM(PRODUCTION_RATE, PRODUCTION_BASE),
    (industry_type == INDUSTRYTYPE_TEMPERATE_FACTORY) ? [
        SET_PERM(PROD_MULTIPLIER, 3)
    ] : [
        SET_PERM(PROD_MULTIPLIER, 1)
    ],
    (industry_sector == IND_SECONDARY) ? [
        SET_PERM(POWER_SLOT, getPowerSlot()),
        setPowerDemand(0)
    ] : [0],
    // must not return 0
    PRODUCTION_BASE
]) { return; }


#include "extra_text.pnml"
#include "prod_change.pnml"
#include "stockpile.pnml"

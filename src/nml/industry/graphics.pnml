/********************
 * Sprite Layout
 ********************/


switch(FEAT_INDUSTRYTILES, SELF, getRandomFirstFrame, animation_length, [
    // abs is required since the random number in extra_callback_info1 may be
    // interpreted as being negative
    abs(extra_callback_info1 % animation_length)
]) { return; }


/* Power Plant
 * Only need to specify the chimney tile, the rest take their sprites from the
 * base graphics.
 *
 * Sprite Sources:
 *   bare ground:
 *     https://github.com/OpenTTD/OpenGFX/blob/7.1/sprites/base/base-3924-terrain.pnml#L3
 *   power plant:
 *     https://github.com/OpenTTD/OpenGFX/blob/7.1/sprites/base/base-2011-industries.pnml#L46
 *   smoke:
 *     animation starts at sprite 3701
 *     https://github.com/OpenTTD/OpenGFX/blob/7.1/sprites/base/base-3701-smoke-explosion.pnml
 */


/* chimney smoke control */
#define ANI_LEN_CHIMNEY_SMOKE 7

// finished state
spritelayout power_plant_chimney {
    // ground
    childsprite {
        sprite: 3924;
    }
    // chimney
    building {
        sprite: 2050;
    }
    // smoke
    building {
        // animation_frame is a tile variable
        sprite:  (3701 + animation_frame) * getTemp(CHIMNEY_ANIMATED);
        xoffset: 5;
        yoffset: 2;
        zoffset: 39;
    }
}

// construction states
spritelayout power_plant_chimney_build_0 {
    childsprite {
        sprite: 3924;
    }
    building {
        sprite: 2048;
    }
}

spritelayout power_plant_chimney_build_1 {
    childsprite {
        sprite: 3924;
    }
    building {
        sprite: 2049;
    }
}

spritelayout power_plant_chimney_build_2 {
    childsprite {
        sprite: 3924;
    }
    building {
        sprite: 2050;
    }
}

switch(FEAT_INDUSTRYTILES, PARENT, getChimneyAnimation, [
    setTemp(CHIMNEY_ANIMATED, getPerm(POWER_SUPPLY_PREV) > 0)
]) {
    power_plant_chimney;
}

switch(FEAT_INDUSTRYTILES, SELF, power_plant_getChimneyGraphics, [
    // construction_state is a tile variable
    construction_state
]) {
    0:       power_plant_chimney_build_0;
    1:       power_plant_chimney_build_1;
    2:       power_plant_chimney_build_2;
    default: getChimneyAnimation();
}


/* substation spark control */

// the animation is actually 6 frames, but we want to include frame zero as a
// stop frame
#define ANI_LEN_SPARK 7

/* getNextFrameSpark()
 * Run the animation once
 */
switch(FEAT_INDUSTRYTILES, SELF, getNextFrameSpark, [
    (animation_frame == 0)
        ? 0
        : (animation_frame + 1) % ANI_LEN_SPARK
]) { return; }

/* isGenerating() */
switch(FEAT_INDUSTRYTILES, PARENT, isGenerating, [
    getPerm(POWER_SUPPLY_PREV) > 0
]) { return; }

/* sparkChance()
 * 1/3 chance of sparks
 */
random_switch(FEAT_INDUSTRYTILES, SELF, sparkChance,
    bitmask(TRIGGER_INDUSTRYTILE_TILELOOP)
) {
    2: 0;
    1: 1;
}

/* shouldSpark()
 * Whether the spark animation should kick off. Conveniently returns 0 or 1,
 * doubling up as a boolean and the frame to display.
 */
switch(FEAT_INDUSTRYTILES, SELF, shouldSpark, [
    (animation_frame == 0)
        && sparkChance()
        && isGenerating()
]) { return; }

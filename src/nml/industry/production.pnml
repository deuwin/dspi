/********************
 * Production
 ********************/

#define PRODUCTION_BASE 16
#define PRODUCTION_MIN  5
#define PRODUCTION_MAX  255
#define BURN_RATE_MAX   127


produce(noProduction, [], [])


/********************
 * Power Plant
 ********************/

produce(power_plant_produceBlock,
    [
        COAL: getTemp(BURNED_COAL);
        OIL_: getTemp(BURNED_OIL);
    ], [],
    0
)

#define ADJUST_COAL 1
#define ADJUST_OIL  2
switch(FEAT_INDUSTRIES, SELF, adjustFuelBurned, coal, oil, [
    // I think this might count as syntax abuse...
    (coal == 0) ?
        ADJUST_OIL
    :(oil == 0) ?
        ADJUST_COAL
    :(coal < oil) ?
        ADJUST_OIL
    :
        ADJUST_COAL
]) {
    ADJUST_COAL: setTemp(BURNED_COAL, coal - 1);
    ADJUST_OIL:  setTemp(BURNED_OIL,  oil - 1);
}

switch(FEAT_INDUSTRIES, SELF, power_plant_calcProduction, [
    updateStockpileAverage(0, getStockpiled(COAL)),
    updateStockpileAverage(1, getStockpiled(OIL_)),

    // get fuel available to burn
    setTemp(FUEL_STOCKPILED, getStockpiled(COAL) + getStockpiled(OIL_)),
    setTemp(FUEL_AVAILABLE, min(getTemp(FUEL_STOCKPILED), BURN_RATE_MAX)),
    updateGridFuelAvailable(getTemp(FUEL_AVAILABLE)),

    // calculate how much this station should burn, taking into account other
    // stations on the grid
    setTemp(FUEL_REQUIRED,
        divideCeil(
            getFuelRequired() * getTemp(FUEL_AVAILABLE),
            getGridFuelAvailable())
    ),
    setTemp(BURN_LIMIT,
        min(getTemp(FUEL_AVAILABLE), getTemp(FUEL_REQUIRED))
    ),

    // calculate ratios of what should be burned
    setTemp(BURNED_COAL,
        divideCeil(
            getStockpiled(COAL) * getTemp(FUEL_REQUIRED),
            getTemp(FUEL_STOCKPILED))
    ),
    setTemp(BURNED_OIL,
        divideCeil(
            getStockpiled(OIL_) * getTemp(FUEL_REQUIRED),
            getTemp(FUEL_STOCKPILED))
    ),
    setTemp(BURNED_TOTAL,
        getTemp(BURNED_COAL) + getTemp(BURNED_OIL)
    ),

    // using divideCeil() may cause the plant to burn a little extra than it
    // should, so that's adjusted here
    (getTemp(BURNED_TOTAL) > getTemp(BURN_LIMIT)) ? [
        adjustFuelBurned(getTemp(BURNED_COAL), getTemp(BURNED_OIL)),
        setTemp(BURNED_TOTAL, getTemp(BURNED_COAL) + getTemp(BURNED_OIL))
    ]:[0],

    updateGridPowerSupplied(getTemp(BURNED_TOTAL)),
]) { return power_plant_produceBlock; }

